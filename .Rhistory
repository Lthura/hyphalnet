subset(!Patient%in%c('POOL Log Ratio','Authority','Organism','Locus','Description','Chromosome'))%>%
dplyr::select(-NCBIGeneID)%>%
tidyr::pivot_wider(names_from=Gene,values_from=!!valueToPlot,values_fill = list(!!valueToPlot=0.0))%>%
tibble::column_to_rownames('Patient')
vf=list(0.0)
names(vf)=valueToPlot
mat<-distab%>%
subset(!Patient%in%c('POOL Log Ratio','Authority','Organism','Locus','Description','Chromosome'))%>%
dplyr::select(-NCBIGeneID)%>%
tidyr::pivot_wider(names_from=Gene,values_from=!!valueToPlot,values_fill=vf)%>%
tibble::column_to_rownames('Patient')
gres<-autoplot(prcomp(mat[,-1]),data=mat,colour='disease')+scale_color_manual(viridis(length(unique(distab$disease))))
gres
length(unique(distab$disease))
viridis(length(unique(distab$disease))
)
?scale_color_viridis
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=mat,colour='disease')+scale_color_viridis(length(unique(distab$disease)))
gres
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=mat,colour='disease')+scale_color_viridis()
gres
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=mat,colour='disease')
gres
?autoplot
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))
withmeans
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)
ggplot(withmeans,aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)
ggplot(withmeans,aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
dim(withmeans)
head(withmeans)
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)%>%
pivot_longer(cols=c(meanDiffs,logratio),names_to='Statistic',values_to='value')
ggplot(withmeans,aes(x=disease,y=stat,fill=Statistic))+geom_boxplot()
ggplot(withmeans,aes(x=disease,y=value,fill=Statistic))+geom_boxplot()
ggplot(withmeans,aes(x=disease,y=value,fill=Statistic))+geom_boxplot()+scale_y_log10()
ggplot(withmeans,aex(x=logratio,y=meanDiffs,col=disease))+geom_point()
ggplot(withmeans,aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
ggplot(withmeans,aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
ggplot(subset(withmeans,abs(meanDiffs>1)),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
ggplot(subset(withmeans,abs(meanDiffs)>1),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
ggplot(subset(withmeans,abs(meanDiffs)>2),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
q()
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
dim(distab)
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
#pivot_longer(cols=c(meanDiffs,logratio),names_to='Statistic',values_to='value')
ggplot(subset(withmeans,meanDiffs>10),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
require(ggplot2)
ggplot(subset(withmeans,meanDiffs>10),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
ggplot(subset(withmeans,abs(meanDiffs)>10),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
subset(withmeans,abs(meanDiffs)>10)
distab<-subset(distab,!is.na(logratio))%>%
subset(!Patient%in%c('POOL Log Ratio','Authority','Organism','Locus','Description','Chromosome'))
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
#pivot_longer(cols=c(meanDiffs,logratio),names_to='Statistic',values_to='value')
#  ggplot(withmeans,aes(x=disease,y=value,fill=Statistic))+geom_boxplot()+scale_y_log10()
ggplot(subset(withmeans,abs(meanDiffs)>10),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
}
subset(withMeans,abs(meanDiffs)>3)
subset(withmeans,abs(meanDiffs)>3)
subset(withmeans,abs(meanDiffs)>3)%>%select(Gene)%>%distinct()
subset(withmeans,abs(meanDiffs)>3)%>%select(Gene,disease)%>%distinct()
subset(withmeans,abs(meanDiffs)>3)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
ggplot(subset(withmeans,abs(meanDiffs)>3),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
thresh=3
res=subset(withmeans,abs(meanDiffs)>thresh)
plotPCAbyDisease(res,valueToPlot = 'meanDiffs')
head(res)
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
plotPCAbyDisease(res,valueToPlot = 'meanDiffs')
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
plotPCAbyDisease(res,valueToPlot = 'meanDiffs')
head(res)
head(arrange(res,meanDiffs))
head(arrange(res,desc(meanDiffs)))
View(arrange(res,desc(meanDiffs)))
mat<-distab%>%
dplyr::select(-NCBIGeneID)%>%
dplyr::select(Gene,Patient,disease,logratio)%>%
tidyr::pivot_wider(names_from=Gene,values_from=logratio,values_fill=vf)%>%
tibble::column_to_rownames('Patient')
mat<-distab%>%
dplyr::select(-NCBIGeneID)%>%
dplyr::select(Gene,Patient,disease,logratio)%>%
tidyr::pivot_wider(names_from=Gene,values_from=logratio,values_fill=list(logratio=0))%>%
tibble::column_to_rownames('Patient')
?glm
head(mat)
mat[1:10,1:10]
fit=glm(disease~.,mat)
fit=glm(disease~.,mat,family='gaussian')
fit
mat[1:10,1)1;]
mat$didisease
mat$didisease
mat$disease<-as.factor(mat$disease)
fit=glm(disease~.,mat,family='gaussian')
library(glmnet)
install.packages('glmnet')
library(glmnet)
?glmnet
fit=glmnet(x=mat[,1],y=mat$disease,family='gaussian')
fit=glmnet(x=mat[,1],y=mat$disease,family='binomial')
fit=glm(x=mat[,1],y=mat$disease,family='binomial')
fit=glm(disease~.,mat,family='binomial')
fit=glm(disease~.,mat,family='multinomial')
fit=glmnet(disease~.,mat,family='multinomial')
fit=glmnet(x=mat[,-1],y=mat$disease,family='multinomial')
mat[,-1]
mat[1:10,2:10]
head(distab)
fit=glmnet(x=mat[,1],y=mat$disease,family='binomial')
fit=glmnet(x=mat[,-1],y=mat$disease,family='binomial')
fit=glmnet(x=mat[,-1],y=mat$disease,family='multinomial')
xm=apply(mat[,-1],2,as.numeric)
fit=glmnet(x=xm,y=mat$disease,family='multinomial')
fit
summary(fit)
xm[1:10,1:10]
plot(fit)
fit
head(fit)
names(fit)
summary(ft)
summary(fit)
coef(fit,s=0.1)
head(coef(fit,s=0.1))
dim(coef(fit,s=0.1))
names(coef(fit,s=0.1))
coef(fit,s='lambda.min')
cvfit=cv.glmnet(x=xm,y=mat$disease,family='multinomial')
plot(cvfit)
coef(cvfit,s='lambda.min')
View(coef(cvfit,s='lambda.min'))
as.matrix(coef(cvfit,s='lambda.min'))
names(coef(cvfit,s='lambda.min'))
lapply(coef(cvfit,s='lambda.min'),as.matrix)
do.call(cbind,lapply(coef(cvfit,s='lambda.min'),as.matrix))
library(tibble)
map_dfr
??map_dfr
library(purrr)
coefs<-coef(cvfit,s='lambda.min')
do.call(cbind,lapply(coef(cvfit,s='lambda.min'),as.matrix))
coefs
map_df(coefs,as.matrix)
map_df(coefs,as.matrix)%>%mutate(Gene=rownames(mat))
rownames(mat)
map_df(coefs,as.matrix)%>%mutate(Gene=colnames(xm)
)
map_df(coefs,as.matrix)%>%mutate(Gene=c('Intercept',colnames(xm)))
res<-map_df(coefs,as.matrix)%>%mutate(Gene=c('Intercept',colnames(xm)))
res<-map_df(coefs,as.matrix)%>%
mutate(mval=rowMeans)%>%
mutate(Gene=c('Intercept',colnames(xm)))
?summmarize
?summarize
res<-map_df(coefs,as.matrix)%>%
summarize(mval=means)%>%
mutate(Gene=c('Intercept',colnames(xm)))
res<-map_df(coefs,as.matrix)%>%
summarize(mval=mean())%>%
mutate(Gene=c('Intercept',colnames(xm)))
res<-map_df(coefs,as.matrix)%>%
mutate(Gene=c('Intercept',colnames(xm)))
res
res<-map_df(coefs,as.matrix)%>%
mutate(Gene=c('Intercept',colnames(xm)))%>%
group_by(Gene)%>%
summarize(mval=mean())%>%
subset(mval!=0)
res<-map_df(coefs,as.matrix)%>%
mutate(Gene=c('Intercept',colnames(xm)))%>%
pivot_longer(cols=names(coefs),values_to='coef',names_to='disease')
res
subset(res,coef!=0)
head(distab)
head(unique(distab$Gene))
mat<-distab%>%
subset(!Gene%in%c('Mean','Median','StdDev'))%>%
dplyr::select(-NCBIGeneID)%>%
dplyr::select(Gene,Patient,disease,logratio)%>%
tidyr::pivot_wider(names_from=Gene,values_from=logratio,values_fill=list(logratio=0))%>%
tibble::column_to_rownames('Patient')
xm=apply(mat[,-1],2,as.numeric)
cvfit=cv.glmnet(x=xm,y=mat$disease,family='multinomial')
#extract proteins with non-zero co-efficiets
coefs<-coef(cvfit,s='lambda.min')
res<-map_df(coefs,as.matrix)%>%
mutate(Gene=c('Intercept',colnames(xm)))%>%
pivot_longer(cols=names(coefs),values_to='coef',names_to='disease')%>%
subset(coef!=0)
res
View(res)
cvfit=cv.glmnet(x=xm,y=mat$disease,family='multinomial',type.measure='auc')
perf=performance(cvfit)
??performance
library(ROCR)
install.packages('ROCR')
library(ROCR)
perf=performance(cvfit)
dim(xm)
pheatmap(xm[,intersect(colnames(xm),res$Gene)])
library(pheatmap)
pheatmap(xm[,intersect(colnames(xm),res$Gene)])
adf<-dplyr::select(distab,c(Patient,Disease))%>%distinct()%>%column_to_rownames('Patient')
head(distab)
adf<-dplyr::select(distab,c(Patient,disease))%>%distinct()%>%column_to_rownames('Patient')
adf
adf<-dplyr::select(distab,c(Patient,disease))%>%distinct()%>%column_to_rownames('Patient')
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),annotation_col=adf)
adf<-dplyr::select(distab,c(Patient,disease))%>%distinct()%>%column_to_rownames('Patient')
adf
colnames(adf)
rownames(adf)
rownames(xm)
rowmanes(mat)
rownames(mat)
xm=apply(mat[,-1],2,as.numeric)
rownames(xm)<-rownames(mat)
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),annotation_col=adf)
?pheatmap
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
annotation_names_cols=F           )
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2')
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2',show_colnames=F)
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=9,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=10,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=10,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2',show_colnames=F,ce)
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
res
ggplot(res,aes(x=coef,fill=disease))+geom_histogram()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram(binwidth = 20)
dev.off()
dev.off()
dev.off()
dev.off()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram(position='dodge')
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_histogram(position='dodge')
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_ribbon()
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_jitter()
ggplot(subset(distab,Gene%in%res$Gene),aes(x=disease,y=logratio,col=disease))+geom_jitter()
head(distb)
distab
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
ggplot(subset(distab,Gene%in%res$Gene),aes(x=disease,y=meanDiffs,col=disease))+geom_jitter()
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=disease,y=meanDiffs,col=disease))+geom_jitter()
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
distab <-do.call(rbind,lapply(names(dislist),function(x) mutate(dislist[[x]],disease=x)))
distab$logratio<-as.numeric(distab$logratio)
distab<-subset(distab,!is.na(logratio))%>%
subset(!Patient%in%c('POOL Log Ratio','Authority','Organism','Locus','Description','Chromosome'))%>%
subset(!Gene%in%c('Mean','Median','StdDev'))
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
head(withmeans)
dim(subset(distab,logratio>2))
dim(distab)
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
p<-plotPCAbyDisease(subset(distab,logratio>2))
p
subset(distab,logratio>2)
subset(distab,logratio>2)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>5)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>4)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
p<-plotPCAbyDisease(subset(distab,logratio>3))
p
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
p<-plotHeatmapOfProts(subset(distab,logratio>3))
plotHeatmapOfProts<-function(distab,prots,prefix){
xm=distab2Matrix(distab)
library(pheatmap)
adf<-dplyr::select(distab,c(Patient,disease))%>%
distinct()%>%column_to_rownames('Patient')
pheatmap(t(xm[,intersect(colnames(xm),prots)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0(prefix,paste(unique(distab$disease),collapse='_'),'.pdf')))
}
p<-plotHeatmapOfProts(subset(distab,logratio>3))
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene))
p<-plotHeatmapOfProts(distab,distinct(select(subset(distab,logratio>3),Gene)))
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
plotHeatmapOfProts<-function(distab,prots,prefix=''){
xm=distab2Matrix(distab)
library(pheatmap)
adf<-dplyr::select(distab,c(Patient,disease))%>%
distinct()%>%column_to_rownames('Patient')
pheatmap(t(xm[,intersect(colnames(xm),prots)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0(prefix,paste(unique(distab$disease),collapse='_'),'.pdf')))
}
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>4),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene,'lr3')
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>4),Gene)$Gene,'lr4')
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>5),Gene)$Gene,'lr5')
subset(distab,logratio>5)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>4)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
distab
distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))
distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(patient)%>%summarize(n_distinct(Gene))
quantiled%>%subset(highExp==TRUE)%>%group_by(Patient)%>%summarize(n_distinct(Gene))
quantiled%>%subset(highExp==TRUE)%>%group_by(Patient)%>%summarize(n_distinct(Gene))%>%View()
quantiled%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.97))%>%mutate(highExp=logratio>topThresh)
quantiled%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.99))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled
quantiled%>%subset(highExp==TRUE)
pres<-quantiled%>%subset(highExp==TRUE)%>%getSelectedProteins()
pres
View(pres)
plotHeatmapOfProts(distab,prots=pres$Gene,prefix='top1percentLasso')
plotHeatmapOfProts(distab,prots=unique(pres$Gene),prefix='top1percentLasso')
plotHeatmapOfProts(distab,prots=unique(pres$Gene),prefix='top1percentLasso')
#now if we filter by quantile
quantiled=distab%>%group_by(Patient)%>%
mutate(topThresh=quantile(logratio,0.99))%>%
mutate(highExp=logratio>topThresh)%>%
ungroup()
qprots<-subset(quantiled,highExp==TRUE)%>%
select(Gene)%>%distinct()
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.99))%>%mutate(highExp=logratio>topThresh)
qprots
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
quantiled=distab%>%group_by(Patient)%>%
mutate(topThresh=quantile(logratio,0.99))%>%
mutate(highExp=logratio>topThresh)%>%
ungroup()
qprots<-subset(quantiled,highExp==TRUE)%>%
select(Gene)%>%distinct()
quantiled%>%
group_by(disease)%>%
summarize(numProts=n_distinct(Gene))
res2=getSelectedProteins(subset(quantiled,Genes%in%qprots$Gene))
plotHeatmapOfProts(distab,res2$Gene,prefix='lassoSelectedTopQuantProtFor')
res2=getSelectedProteins(subset(quantiled,Gene%in%qprots$Gene))
plotHeatmapOfProts(distab,res2$Gene,prefix='lassoSelectedTopQuantProtFor')
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab)
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=mat,colour='disease')
gres
}
plotPCAbyDisease(  mat=distab2Matrix(distab)
)
mat=distab2Matrix(distab)
dim(mat)
prcomp(mat)
mat=dt(istab2Matrix(distab))
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=distab,colour='disease')
mat=t(distab2Matrix(distab)))
gres<-autoplot(prcomp(mat,scale=T,center=T),data=distab,colour='disease')
mat[1:10,1;10]
mat[1:10,1:10]
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
dev.off()
dev.off()
dev.off()
dev.off()
gres
prcomp(mat)
autoplot(prcomp(t(mat)))
dim(mat)
mat[1:10,1:10]
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
head(distab)
#' cluster samples by disease
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab)
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
rres
res2
p2<-plotPCAbyDisease(subset(distab,Gene%in%res2$Gene))
ggsave(p2,'lassoSelectedTopQuantProts.png')
p2
p1
p1<-plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
p1
p2
p1
plotPCAbyDisease(subset(distab,Gene%in%qprots$Gene))
q()
