pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2')
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2',show_colnames=F)
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=9,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=10,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cell_height=10,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,clustering_method = 'ward.D2',show_colnames=F,ce)
pheatmap(t(xm[,intersect(colnames(xm),res$Gene)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0('lassoSelectedProtFor_',paste(names(coefs),collapse='_'),'.pdf')))
res
ggplot(res,aes(x=coef,fill=disease))+geom_histogram()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram(binwidth = 20)
dev.off()
dev.off()
dev.off()
dev.off()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram()
ggplot(res,aes(x=coef,fill=disease))+geom_histogram(position='dodge')
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_histogram(position='dodge')
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_ribbon()
ggplot(subset(distab,Gene%in%res$Gene),aes(x=logratio,fill=disease))+geom_jitter()
ggplot(subset(distab,Gene%in%res$Gene),aes(x=disease,y=logratio,col=disease))+geom_jitter()
head(distb)
distab
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
ggplot(subset(distab,Gene%in%res$Gene),aes(x=disease,y=meanDiffs,col=disease))+geom_jitter()
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=disease,y=meanDiffs,col=disease))+geom_jitter()
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
distab <-do.call(rbind,lapply(names(dislist),function(x) mutate(dislist[[x]],disease=x)))
distab$logratio<-as.numeric(distab$logratio)
distab<-subset(distab,!is.na(logratio))%>%
subset(!Patient%in%c('POOL Log Ratio','Authority','Organism','Locus','Description','Chromosome'))%>%
subset(!Gene%in%c('Mean','Median','StdDev'))
withmeans<-distab%>%
group_by(Gene)%>%
mutate(geneMeans=mean(logratio))%>%
mutate(meanDiffs=logratio-geneMeans)#%>%
ggplot(subset(withmeans,Gene%in%res$Gene),aes(x=logratio,y=meanDiffs,col=disease))+geom_point()
head(withmeans)
dim(subset(distab,logratio>2))
dim(distab)
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
p<-plotPCAbyDisease(subset(distab,logratio>2))
p
subset(distab,logratio>2)
subset(distab,logratio>2)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>5)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>4)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
p<-plotPCAbyDisease(subset(distab,logratio>3))
p
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
p<-plotHeatmapOfProts(subset(distab,logratio>3))
plotHeatmapOfProts<-function(distab,prots,prefix){
xm=distab2Matrix(distab)
library(pheatmap)
adf<-dplyr::select(distab,c(Patient,disease))%>%
distinct()%>%column_to_rownames('Patient')
pheatmap(t(xm[,intersect(colnames(xm),prots)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0(prefix,paste(unique(distab$disease),collapse='_'),'.pdf')))
}
p<-plotHeatmapOfProts(subset(distab,logratio>3))
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene))
p<-plotHeatmapOfProts(distab,distinct(select(subset(distab,logratio>3),Gene)))
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
plotHeatmapOfProts<-function(distab,prots,prefix=''){
xm=distab2Matrix(distab)
library(pheatmap)
adf<-dplyr::select(distab,c(Patient,disease))%>%
distinct()%>%column_to_rownames('Patient')
pheatmap(t(xm[,intersect(colnames(xm),prots)]),
annotation_col=adf,
clustering_distance_cols='correlation',
clustering_distance_rows='correlation',
annotation_names_cols=FALSE,
clustering_method = 'ward.D2',
show_colnames=F,
cellheight=9,
filename=(paste0(prefix,paste(unique(distab$disease),collapse='_'),'.pdf')))
}
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>4),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene)
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>3),Gene)$Gene,'lr3')
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>4),Gene)$Gene,'lr4')
p<-plotHeatmapOfProts(distab,select(subset(distab,logratio>5),Gene)$Gene,'lr5')
subset(distab,logratio>5)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
subset(distab,logratio>4)%>%group_by(disease)%>%summarize(ngenes=n_distinct(Gene))
distab
distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))
distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(patient)%>%summarize(n_distinct(Gene))
quantiled%>%subset(highExp==TRUE)%>%group_by(Patient)%>%summarize(n_distinct(Gene))
quantiled%>%subset(highExp==TRUE)%>%group_by(Patient)%>%summarize(n_distinct(Gene))%>%View()
quantiled%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.97))%>%mutate(highExp=logratio>topThresh)
quantiled%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.95))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.99))%>%mutate(highExp=logratio>topThresh)
quantiled%>%subset(highExp==TRUE)%>%group_by(disease)%>%summarize(n_distinct(Gene))
quantiled
quantiled%>%subset(highExp==TRUE)
pres<-quantiled%>%subset(highExp==TRUE)%>%getSelectedProteins()
pres
View(pres)
plotHeatmapOfProts(distab,prots=pres$Gene,prefix='top1percentLasso')
plotHeatmapOfProts(distab,prots=unique(pres$Gene),prefix='top1percentLasso')
plotHeatmapOfProts(distab,prots=unique(pres$Gene),prefix='top1percentLasso')
#now if we filter by quantile
quantiled=distab%>%group_by(Patient)%>%
mutate(topThresh=quantile(logratio,0.99))%>%
mutate(highExp=logratio>topThresh)%>%
ungroup()
qprots<-subset(quantiled,highExp==TRUE)%>%
select(Gene)%>%distinct()
quantiled=distab%>%group_by(Patient)%>%mutate(topThresh=quantile(logratio,0.99))%>%mutate(highExp=logratio>topThresh)
qprots
source('~/GitHub/hyphalnet/R/panCancerStatistics.R')
quantiled=distab%>%group_by(Patient)%>%
mutate(topThresh=quantile(logratio,0.99))%>%
mutate(highExp=logratio>topThresh)%>%
ungroup()
qprots<-subset(quantiled,highExp==TRUE)%>%
select(Gene)%>%distinct()
quantiled%>%
group_by(disease)%>%
summarize(numProts=n_distinct(Gene))
res2=getSelectedProteins(subset(quantiled,Genes%in%qprots$Gene))
plotHeatmapOfProts(distab,res2$Gene,prefix='lassoSelectedTopQuantProtFor')
res2=getSelectedProteins(subset(quantiled,Gene%in%qprots$Gene))
plotHeatmapOfProts(distab,res2$Gene,prefix='lassoSelectedTopQuantProtFor')
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab)
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=mat,colour='disease')
gres
}
plotPCAbyDisease(  mat=distab2Matrix(distab)
)
mat=distab2Matrix(distab)
dim(mat)
prcomp(mat)
mat=dt(istab2Matrix(distab))
gres<-autoplot(prcomp(mat[,-1],scale=T,center=T),data=distab,colour='disease')
mat=t(distab2Matrix(distab)))
gres<-autoplot(prcomp(mat,scale=T,center=T),data=distab,colour='disease')
mat[1:10,1;10]
mat[1:10,1:10]
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
dev.off()
dev.off()
dev.off()
dev.off()
gres
prcomp(mat)
autoplot(prcomp(t(mat)))
dim(mat)
mat[1:10,1:10]
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
head(distab)
#' cluster samples by disease
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab))
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease<-function(distab){
library(viridis)
mat=distab2Matrix(distab)
dat<-distab%>%
dplyr::select(Patient,disease)%>%distinct()
gres<-autoplot(prcomp(mat,scale=T,center=T),data=dat,colour='disease')
gres
}
plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
rres
res2
p2<-plotPCAbyDisease(subset(distab,Gene%in%res2$Gene))
ggsave(p2,'lassoSelectedTopQuantProts.png')
p2
p1
p1<-plotPCAbyDisease(subset(distab,Gene%in%res1$Gene))
p1
p2
p1
plotPCAbyDisease(subset(distab,Gene%in%qprots$Gene))
q()
q()
tab<-read.table('data/9606.protein.links.v11.0.txt')
head(tab)
tab<-read.table('data/9606.protein.links.v11.0.txt',header=T)
tab$cost
tab$cost<-tab$cost/1000
tab
write.table(tab,file='data/9606.protein.links.v11.0.norm.txt',sep='\t',row.names=F,col.names=T)
write.table(tab,file='data/9606.protein.links.v11.0.norm.txt',sep='\t',row.names=F,col.names=T,quote=F)
fname='brcacommunities.csv'
tab<-read.csv(fname)
library(ggplot2)
library(dplyr)
tab
head(tab)
tab%>%group_by(Partition)%>%summarize(n(Node))
tab%>%group_by(Partition)%>%summarize(numProts=n(Node))
tab%>%group_by(Partition)%>%summarize(numProts=n_distinct(Node))
tab%>%group_by(Partition)%>%summarize(numProts=n_distinct(Node))%>%View()
source('~/GitHub/hyphalnet/R/netStats.R')
source('~/GitHub/hyphalnet/R/netStats.R')
visualizeCommunitySize('brcacommunities.csv')
visualizeCommunitySize('luadcommunities.csv')
visualizeCommunitySize('gbmcommunities.csv')
visualizeCommunitySize('luadcommunities.csv')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
head(disTab)
rename(disTab,value='logratio')
disTab<-rename(disTab,value='logratio')
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
rename(value='geneMean')%>%
select(Gene,value)
disMeanTerms
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
rename(value='geneMean')%>%
select(Gene,value)%>%
group_map(plotOldGSEA,prefix=disease)
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
rename(value='geneMean')%>%
select(Gene,value)%>%
group_map(plotOldGSEA,prefix='')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
disTab<-readInAllFiles()%>%dplyr::rename(value='logratio')
head()
head(disTab)
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
rename(value='geneMean')%>%
select(Gene,value)%>%
group_map(plotOldGSEA,prefix='')
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
dplyr::rename(value='geneMean')%>%
select(Gene,value)%>%
group_map(plotOldGSEA,prefix='')
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
dplyr::rename(value='geneMean')%>%
dplyr::select(Gene,value)%>%
group_map(plotOldGSEA,prefix='')
genesWithMeans
disMeanTerms
genes.with.values = subset(disMeanTerms,disease=='BRCA')
genes.with.values
mapping<-as.data.frame(org.Hs.egALIAS2EG)%>%
dplyr::rename(Gene='alias_symbol')
genes.with.values<-genes.with.values%>%
dplyr::left_join(mapping,by='Gene')%>%
arrange(desc(value))
genes.with.values
genelist=genes.with.values$value
names(genelist)=genes.with.values$gene_id
genelist
gr<-clusterProfiler::gseGO(genelist[!is.na(genelist)],ont="BP",keyType="SYMBOL",
OrgDb=org.Hs.eg.db,pAdjustMethod = 'BH')#,eps=1e-10)
genelist[!is.na(genelist)]
genelist=genes.with.values$value
names(genelist)=genes.with.values$Gene
gr<-clusterProfiler::gseGO(genelist[!is.na(genelist)],ont="BP",keyType="SYMBOL",
OrgDb=org.Hs.eg.db,pAdjustMethod = 'BH')#,eps=1e-10)
gr
summary(gr)
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
disMeanTerms
dim(disMeanTerms)
ungroup(disMeanTerms)
summary(gr)
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
dplyr::rename(value='geneMean')%>%
dplyr::select(Gene,value)%>%
group_modify(plotOldGSEA,prefix='')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
disMeanTerms = disTab%>%group_by(disease,Gene)%>%
summarize(geneMean=mean(value))%>%
dplyr::rename(value='geneMean')%>%
dplyr::select(Gene,value)%>%
group_modify(plotOldGSEA)
disMeanTerms
head(disTab)
disPatTerms = disTab%>%
group_by(disease,Patient,Gene)%>%
dplyr::select(Gene,value)%>%
group_modify(plotOldGSEA)%>%
ungroup()
disPatTerms
disPatTerms = disTab%>%
group_by(disease,Patient)%>%
dplyr::select(Gene,value)%>%
group_modify(plotOldGSEA)%>%
ungroup()
disPatCounts = disPatTerms%>%
group_by(Description,disease)%>%summarize(n)
disPatCounts = disPatTerms%>%
group_by(Description,disease)%>%summarize(numTerms=n())
disPatCounts
arrange(disPatCounts,desc(numTerms))
arrange(disPatCounts,desc(numTerms))%>%subset(numTerms>50)
disPatCounts%>%subset(numTerms>50)
disPatCounts%>%subset(numTerms>50)%>%View()
lenght(unique(disPatCounts$Description))
length(unique(disPatCounts$Description))
disPatCounts%>%subset(numTerms>50)%>%select(Description)%>%distinct()
disPatCounts%>%subset(numTerms>50)%>%dplyr::select(Description)%>%distinct()
disPatCounts%>%subset(numTerms>80)%>%dplyr::select(Description)%>%distinct()
disTab<-readInAllFiles()%>%dplyr::rename(value='logratio')
source('~/GitHub/hyphalnet/R/pdcFileProcessing.R')
disTab<-readInAllFiles()%>%dplyr::rename(value='logratio')
disCounts<-disTab%>%group_by(disease)%>%
summarize(numPats=n_distinct(Patient))
disCounts
disPatCounts = disPatTerms%>%
group_by(Description,disease)%>%summarize(numTerms=n)%>%
left_join(disCounts)%>%
mutate(fracSamps=numTerms/numPats)
disPatCounts
disPatCounts = disPatTerms%>%
group_by(Description,disease)%>%summarize(numTerms=n())%>%
left_join(disCounts)%>%
mutate(fracSamps=numTerms/numPats)
disPatCounts
subset(disPatCounts,fracSamps>0.5)
subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-disease,values_from = fracSamps,names_from=Description)
subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=Description)
subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=Description,values_fill=0.0)
subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=Description,values_fill=list(fracSamps=0.0))
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=Description,values_fill=list(fracSamps=0.0))
pheatmap(dmat)
library(pheatmap)
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=Description,values_fill=list(fracSamps=0.0))
pheatmap(dmat)
dmat
as.matrix(dmat)
dmat
disPatCounts
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))
dmat
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
column_to_rownames(Description)
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames(Description)
dmat=subset(disPatCounts,fracSamps>0.5)%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
pheatmap(dmat)
pheatmap(dmat,cellwidth = 10,cellheight = 10)
dmat
dim(dmat)
pheatmap(t(dmat),cellwidth = 10,cellheight = 10)
pheatmap(dmat,cellwidth = 10,cellheight = 5,filename = '')
pheatmap(dmat,cellwidth = 10,cellheight = 5)
pheatmap(dmat,cellwidth = 10,cellheight = 2)
dmat=disPatCounts%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
dmat=disPatCounts%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames(Description)
dmat=disPatCounts%>%pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
dim(dmat)
dmat
head(dmat)
pheatmap(dmat,cellheight=2)
disPatCounts
ggplot(disPatCounts,aes(x=Description,y=fracSamps,col=disease))+ggpoint()
library(ggplot2)
ggplot(disPatCounts,aes(x=Description,y=fracSamps,col=disease))+ggpoint()
ggplot(disPatCounts,aes(x=Description,y=fracSamps,col=disease))+geom_point()
ggplot(disPatCounts,aes(x=Description,y=fracSamps,col=disease))+geom_point()+facet_grid(~disease)
ggplot(disPatCounts,aes(x=Description,y=fracSamps,col=disease))+geom_point()+facet_grid(~disease)+coord_flip()
disPatCounts%>%group_by(disease)%>%summarize(topFracs=top_n(fracSamps))
?top_n
disPatCounts%>%group_by(disease)%>%top_n(10,wt='fracSamps')
disPatCounts%>%group_by(disease)%>%top_n(10,wt=fracSamps)
disPatCounts%>%group_by(disease)%>%top_n(10,wt=fracSamps)%>%View()
dmat = disPatCounts%>%
group_by(disease)%>%
top_n(20,wt=fracSamps)%>%
pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
pheatmap(dmat,cellheight=10,cellwidth=10)
dmat = disPatCounts%>%
group_by(disease)%>%
top_n(10,wt=fracSamps)%>%
pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
pheatmap(dmat,cellheight=10,cellwidth=10)
topTerms = disPatCounts%>%
group_by(disease)%>%
top_n(20,wt=fracSamps)%>%
dplyr::select(Description)
dmat = disPatCounts%>%
subset(Description%in%topTerms$Description)%>%
pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
disPatCounts%>%group_by(disease)%>%top_n(20,wt=fracSamps)%>%View()
topTerms = disPatCounts%>%
group_by(disease)%>%
top_n(20,wt=fracSamps)%>%
dplyr::select(Description)
dmat = disPatCounts%>%
subset(Description%in%topTerms$Description)%>%
pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
pheatmap(dmat,cellheight=10,cellwidth=10)
dim(dmat)
topTerms = disPatCounts%>%
group_by(disease)%>%
top_n(15,wt=fracSamps)%>%
dplyr::select(Description)
dmat = disPatCounts%>%
subset(Description%in%topTerms$Description)%>%
pivot_wider(-c(numTerms,numPats),values_from = fracSamps,names_from=disease,values_fill=list(fracSamps=0.0))%>%
tibble::column_to_rownames('Description')
pheatmap(dmat,cellheight=10,cellwidth=10)
}
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
topTerms
disPatCounts
disPatTerms
source('~/GitHub/hyphalnet/R/panCancerEnrichment.R')
q()
